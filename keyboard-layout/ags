// Keyboard layouts for Serbia.

// Derived from "Danube" D.2 from 2003-05-12,
// which is available at http://srpski.org/dunav/.
//
// Original authors:
//   Danilo Segan (Данило Шеган) <danilo@kvota.net>
//   Chusslove Illich (Часлав Илић) <caslav.ilic@gmx.net>

default partial alphanumeric_keys
xkb_symbols "basic" {

    name[Group1]= "Good Serbian (Latin)";

    include "ags(latin)"
    include "ags(common)"
    include "ags(level3)"
    include "ags(nasaiznad)"
    include "ags(caps_escape)"
};

partial alphanumeric_keys
xkb_symbols "programming" {

    name[Group1]= "Programming Layout";

    include "ags(latin)"
    include "ags(common)"
    include "ags(level3)"
    include "ags(nasaispod)"
    include "ags(caps_escape)"
};

partial alphanumeric_keys
xkb_symbols "cyrillic" {

    name[Group1]= "Good Serbian (Cyrillic)";

    include "ags(common)"
    include "ags(level3)"
    include "ags(nasaiznad)"
    include "ags(cyrillicsymbols)"
    include "ags(caps_escape)"
};

partial alphanumeric_keys
xkb_symbols "cyrillicnocaps" {

    name[Group1]= "Good Serbian (Cyrillic, No CapsLock to Escape)";

    include "ags(common)"
    include "ags(level3)"
    include "ags(nasaiznad)"
    include "ags(cyrillicsymbols)"
};

partial alphanumeric_keys
xkb_symbols "nocaps" {

    name[Group1]= "Good Serbian (Latin, No CapsLock to Escape)";

    include "ags(latin)"
    include "ags(common)"
    include "ags(level3)"
    include "ags(nasaiznad)"
};

partial alphanumeric_keys
xkb_symbols "programmingnocaps" {

    name[Group1]= "Programming Layout (No CapsLock to Escape)";

    include "ags(latin)"
    include "ags(common)"
    include "ags(level3)"
    include "ags(nasaispod)"
};

partial alphanumeric_keys
xkb_symbols "latinyz" {
    // For those who insist on using "english-position" Z and Y.

    include "ags"
    name[Group1]= "Good Serbian (Latin, QWERTY)";

    key <AD06> { [ y,              Y             ] }; // y
    key <AB01> { [ z,              Z             ] }; // z
};

hidden partial alphanumeric_keys
xkb_symbols "common" {
    // "Common" keys: keys that are the same
    // for both latin and cyrillic keyboards.

    key <TLDE> { [      minus,          asciitilde            ] };
    key <AE01> { [          1,          exclam                ] };
    key <AE02> { [          2,          quotedbl              ] };
    key <AE03> { [          3,          numbersign            ] };
    key <AE04> { [          4,          dollar                ] };
    key <AE05> { [          5,          percent               ] };
    key <AE06> { [          6,          asciicircum           ] };
    key <AE07> { [          7,          ampersand             ] };
    key <AE08> { [          8,          asterisk              ] };
    key <AE09> { [          9,          parenleft             ] };
    key <AE10> { [          0,          parenright            ] };
    key <AE11> { [ apostrophe,          question    , grave   ] };
    key <AE12> { [      equal,          plus                  ] };

    key <AB08> { [      comma,          semicolon   , less    ] };
    key <AB09> { [     period,          colon       , greater ] };
    key <AB10> { [      slash,          underscore            ] };

    include "ags(ralt_switch)"
    include "ags(keypad)"
};

hidden partial alphanumeric_keys
xkb_symbols "nasaiznad" {

    key <AD11> { [  scaron,      Scaron,      bracketleft,       braceleft  ] }; // [ {
    key <AD12> { [ dstroke,     Dstroke,     bracketright,      braceright  ] }; // ] }
    key <BKSL> { [  zcaron,      Zcaron,        backslash,             bar  ] }; // \ |

    key <AC10> { [  ccaron,      Ccaron,        semicolon                   ] }; // ; :
    key <AC11> { [  cacute,      Cacute                                     ] }; // ' "
};

hidden partial alphanumeric_keys
xkb_symbols "nasaispod" {

    key <AD11> { [  bracketleft,  braceleft,   scaron,    Scaron ] }; // [ {
    key <AD12> { [ bracketright, braceright,  dstroke,   Dstroke ] }; // ] }

    key <AC10> { [    semicolon,  semicolon,   ccaron,    Ccaron ] }; // ; :
    key <AC11> { [       cacute,     Cacute                      ] }; // ' "
    key <BKSL> { [    backslash,        bar,   zcaron,    Zcaron ] }; // \ |
};

hidden partial alphanumeric_keys
xkb_symbols "level3" {
    key <TLDE> { [ any, any,      notsign,             notsign ] }; // ` ~
    key <AE01> { [ any, any,        U2227,               U00B2 ] }; // 1 !
    key <AE02> { [ any, any,        U2228,               U00B3 ] }; // 2 @
    key <AE03> { [ any, any,        U21D2,               U21D4 ] }; // 3 #
    key <AE04> { [ any, any,     EuroSign,                 yen ] }; // 4 $
    key <AE05> { [ any, any,       degree,              degree ] }; // 5 %
    key <AE06> { [ any, any,        U00B1,               U221A ] }; // 6 ^
    key <AE07> { [ any, any,        U22A4,               U22A5 ] }; // 7 &
    key <AE08> { [ any, any,        U221E,               U2167 ] }; // 8 *
    key <AE09> { [ any, any,        U2168,               U2168 ] }; // 9 (
    key <AE10> { [ any, any,       U1F910,              U1F636 ] }; // 0 )
    key <AE11> { [ any, any,          any,              U1F3AE ] }; // - _
    key <AE12> { [ any, any,        U2248,               U2260 ] }; // = +

    key <AD01> { [ any, any,    backslash,         Greek_OMEGA ] }; // q
    key <AD02> { [ any, any,          bar,               U03B2 ] }; // w
    key <AD03> { [ any, any,       U1F610,              U1F92F ] }; // e
    key <AD04> { [ any, any,       U1F911,           paragraph ] }; // r
    key <AD05> { type[Group1] = "FOUR_LEVEL_ALPHABETIC",
                 [ any, any,    trademark,              U1F914 ] }; // t
    key <AD06> { [ any, any,       U1F1F8,              U1F928 ] }; // y
    key <AD07> { [ any, any,       U1FAE1,              U1F643 ] }; // u
    key <AD08> { [ any, any,       U1F937,              U1F925 ] }; // i
    key <AD09> { type[Group1] = "FOUR_LEVEL_ALPHABETIC",
                 [ any, any,       U1F62C,              U1FAE8 ] }; // o
    key <AD10> { type[Group1] = "FOUR_LEVEL_ALPHABETIC",
                 [ any, any,       U1F92E,              U1F922 ] }; // p
    key <AD11> { [ any, any,     division,      dead_abovering ] }; // [
    key <AD12> { [ any, any,     multiply,         dead_macron ] }; // ]

    key <AC01> { type[Group1] = "FOUR_LEVEL_ALPHABETIC",
                 [ any, any,           AE,               U03B1 ] }; // a
    key <AC02> { [ any, any,       U1F642,              U1F600 ] }; // s
    key <AC03> { [ any, any,       U1F480,              U1F601 ] }; // d
    key <AC04> { [ any, any,       U1F926,              U1F525 ] }; // f
    key <AC05> { [ any, any,       U1F44D,              U1F44E ] }; // g
    key <AC06> { type[Group1] = "FOUR_LEVEL_ALPHABETIC",
                 [ any, any,        U01C6,               U01C5 ] }; // h
    key <AC07> { [ any, any,        U01C9,               U01C8 ] }; // j
    key <AC08> { [ any, any,       U1F595,              U1FAE0 ] }; // k
    key <AC09> { [ any, any,       U1F602,              U1F923 ] }; // l
    key <AC10> { [ any, any,   dead_acute,    dead_doubleacute ] }; // ;
    key <AC11> { [ any, any,       U1F440,              U1F389 ] }; // '
    key <BKSL> { [ any, any,     currency,          dead_breve ] }; // \

    key <AB01> { [ any, any,      section,    guillemotright   ] }; // z
    key <AB02> { [ any, any,       U1F606,    guillemotleft    ] }; // x
    key <AB03> { [ any, any,    copyright,              U1F62D ] }; // c
    key <AB04> { [ any, any,           at,          registered ] }; // v
    key <AB05> { [ any, any,    leftarrow,          rightarrow ] }; // b
    key <AB06> { [ any, any,        U01CC,               U01CB ] }; // n
    key <AB07> { [ any, any,      uparrow,           downarrow ] }; // m
    key <AB08> { [ any, any,         less,            multiply ] }; // , <
    key <AB09> { [ any, any,      greater,            division ] }; // . >
    key <AB10> { [ any, any,       emdash,              endash ] }; // / ?
};

hidden partial
xkb_symbols "latin" {

    key <AD01>	{ [            q,          Q ] };
    key <AD02>	{ [            w,          W ] };
    key <AD03>	{ [            e,          E ] };
    key <AD04>	{ [            r,          R ] };
    key <AD05>	{ [            t,          T ] };
    key <AD06>	{ [            y,          Y ] };
    key <AD07>	{ [            u,          U ] };
    key <AD08>	{ [            i,          I ] };
    key <AD09>	{ [            o,          O ] };
    key <AD10>	{ [            p,          P ] };

    key <AC01>	{ [            a,          A ] };
    key <AC02>	{ [            s,          S ] };
    key <AC03>	{ [            d,          D ] };
    key <AC04>	{ [            f,          F ] };
    key <AC05>	{ [            g,          G ] };
    key <AC06>	{ [            h,          H ] };
    key <AC07>	{ [            j,          J ] };
    key <AC08>	{ [            k,          K ] };
    key <AC09>	{ [            l,          L ] };

    key <AB01>	{ [            z,          Z ] };
    key <AB02>	{ [            x,          X ] };
    key <AB03>	{ [            c,          C ] };
    key <AB04>	{ [            v,          V ] };
    key <AB05>	{ [            b,          B ] };
    key <AB06>	{ [            n,          N ] };
    key <AB07>	{ [            m,          M ] };

};

hidden partial alphanumeric_keys
xkb_symbols "cyrillicsymbols" {

    key <AD01> { [ Cyrillic_lje,   Cyrillic_LJE  ] }; // q
    key <AD02> { [ Cyrillic_nje,   Cyrillic_NJE  ] }; // w
    key <AD03> { [ Cyrillic_ie,    Cyrillic_IE   ] }; // e
    key <AD04> { [ Cyrillic_er,    Cyrillic_ER   ] }; // r
    key <AD05> { [ Cyrillic_te,    Cyrillic_TE   ] }; // t
    key <AD06> { [ Cyrillic_ze,    Cyrillic_ZE   ] }; // y
    key <AD07> { [ Cyrillic_u,     Cyrillic_U    ] }; // u
    key <AD08> { [ Cyrillic_i,     Cyrillic_I    ] }; // i
    key <AD09> { [ Cyrillic_o,     Cyrillic_O    ] }; // o
    key <AD10> { [ Cyrillic_pe,    Cyrillic_PE   ] }; // p
    key <AD11> { [ Cyrillic_sha,   Cyrillic_SHA  ] }; // [ {
    key <AD12> { [ Serbian_dje,    Serbian_DJE   ] }; // ] }

    key <AC01> { [ Cyrillic_a,     Cyrillic_A    ] }; // a
    key <AC02> { [ Cyrillic_es,    Cyrillic_ES   ] }; // s
    key <AC03> { [ Cyrillic_de,    Cyrillic_DE   ] }; // d
    key <AC04> { [ Cyrillic_ef,    Cyrillic_EF   ] }; // f
    key <AC05> { [ Cyrillic_ghe,   Cyrillic_GHE  ] }; // g
    key <AC06> { [ Cyrillic_ha,    Cyrillic_HA   ] }; // h
    key <AC07> { [ Cyrillic_je,    Cyrillic_JE   ] }; // j
    key <AC08> { [ Cyrillic_ka,    Cyrillic_KA   ] }; // k
    key <AC09> { [ Cyrillic_el,    Cyrillic_EL   ] }; // l
    key <AC10> { [ Cyrillic_che,   Cyrillic_CHE  ] }; // ; :
    key <AC11> { [ Serbian_tshe,   Serbian_TSHE  ] }; // ' "
    key <BKSL> { [ Cyrillic_zhe,   Cyrillic_ZHE  ] }; // \ |

    key <AB01> { [ Cyrillic_zhe,   Cyrillic_ZHE  ] }; // z
    key <AB02> { [ Cyrillic_dzhe,  Cyrillic_DZHE ] }; // x
    key <AB03> { [ Cyrillic_tse,   Cyrillic_TSE  ] }; // c
    key <AB04> { [ Cyrillic_ve,    Cyrillic_VE   ] }; // v
    key <AB05> { [ Cyrillic_be,    Cyrillic_BE   ] }; // b
    key <AB06> { [ Cyrillic_en,    Cyrillic_EN   ] }; // n
    key <AB07> { [ Cyrillic_em,    Cyrillic_EM   ] }; // m
};

hidden partial modifier_keys
xkb_symbols "ralt_switch" {
  key <RALT> {[  ISO_Level3_Shift  ], type[group1]="ONE_LEVEL" };
};

hidden partial modifier_keys
xkb_symbols "caps_escape" {
    key <CAPS> { [ Escape ], type[group1] = "ONE_LEVEL" };
};

partial keypad_keys
xkb_symbols "keypad" {

    key.type[Group1]="KEYPAD" ;
    key  <KP7>  { [  F13,		KP_7	] };
    key  <KP8>  { [  F14,		KP_8	] };
    key  <KP9>  { [  F15,		KP_9	] };

    key  <KP4>  { [  F16,		KP_4	] };
    key  <KP5>  { [  F17,		KP_5	] };
    key  <KP6>  { [  F18,		KP_6	] };

    key  <KP1>  { [  F19,		KP_1	] };
    key  <KP2>  { [  F20,		KP_2	] };
    key  <KP3>  { [  F21,		KP_3	] };

    key  <KP0>  { [  F22,		KP_0	] };
    key  <KPDL> { [  F23, 	KP_Separator    ] }; // <delete> <separator>
};


